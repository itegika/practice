// вопрос 4 - В чем разница между классовым и функциональным компонентом?

/*
У классовых компонентов  state есть всегда, а у фунцкиональных его нет. 
Но состояние для функционального компонента можно добавить с помощью хука useState.

У классовых компонентов методы жизненного цикла есть всегда, а у фунцкиональных его нет. 
Но некоторые методы жезненного цикала для функционального компонента можно реализовать с помощью хука useEffect. 

С появлением хуков возможности функциональных компонентов стали практически такими же как и у классовых компонентов.

*/

// 1 - классовый компонент (компоненты можно определять как классы ES6:)

// class Welcome extends React.Component {
//   render() {
//     return <h1>Привет, {this.props.name}</h1>;
//   }
// }

// ********************************************* //

// 2 - функциональный компонент

// function WelcomeFun(props) {
//   return <h1>Привет, {props.name}</h1>;
// }

/*
Эта функция — компонент, потому что она получает данные в одном объекте («пропсы») в качестве параметра и возвращает React-элемент. 
Мы будем называть такие компоненты «функциональными», так как они буквально являются функциями.
*/
