// вопрос 6 - Как обновить state в классовом компоненте?

/*
 *
 * Для обновления состояния используется встроенный метод setState().
 *
 */

// 1) ******** Этот подход используется когда новое состояние не рассчитывается на основе предыдущего:

// state = { fullName: "Poly" };

// ❌ Плохо
// this.state.fullName = "Mango";

// ✅ Хорошо
// this.setState({
//   fullName: "Mango",
// });

// 2) ******** Обновить состояние на основе уже существующего:

// const [state, setState] = useState(initialState);

// const onChange = (query) => {
//     setState((prev) => ({...prev, searchQuery: query}))
// }

////////////////////////////////////////////////////////////////////////////////////////////

// ИЛИ ТАКОЙ ПРИМЕР. Предположим что есть такое состояние
// state = { value: 0 };

// Запустим цикл и создадим 3 операции обновления
// for (let i = 0; i < 3; i += 1) {
/*
 * Если посмотреть состояние, на всех итерациях будет 0
 * Потому что это синхронный код и обновление состояния еще не произошло
 */
// console.log(this.state.value); // 0

// this.setState(prevState => {
/*
 * Если посмотреть состояние переданное callback-функции во время ее вызова,
 * получим актуальное состояния на момент обновления.
 */
//     console.log(prevState.value); // будет разный на каждой итерации

//     return { value: prevState.value + 1 };
//   });
// }
